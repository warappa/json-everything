<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonSchema.Net.Data</name>
    </assembly>
    <members>
        <member name="T:Json.Schema.Data.DataKeyword">
            <summary>
            Represents the `data` keyword.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.DataKeyword.Name">
            <summary>
            The JSON name of the keyword.
            </summary>
        </member>
        <member name="P:Json.Schema.Data.DataKeyword.Fetch">
            <summary>
            Gets or sets a method to download external references.
            </summary>
            <remarks>
            The default method simply attempts to download the resource.  There is no
            caching involved.
            </remarks>
        </member>
        <member name="P:Json.Schema.Data.DataKeyword.ExternalDataRegistry">
            <summary>
            Provides a registry for known external data sources.
            </summary>
            <remarks>
            This property stores full JSON documents retrievable by URI.  If the desired
            value exists as a sub-value of a document, a JSON Pointer URI fragment identifier
            should be used in the `data` keyword do identify the exact value location.
            </remarks>
        </member>
        <member name="P:Json.Schema.Data.DataKeyword.References">
            <summary>
            The collection of keywords and references.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Json.Schema.Data.IDataResourceIdentifier})">
            <summary>
            Creates an instance of the <see cref="T:Json.Schema.Data.DataKeyword"/> class.
            </summary>
            <param name="references">The collection of keywords and references.</param>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Evaluate(Json.Schema.EvaluationContext)">
            <summary>
            Performs evaluation for the keyword.
            </summary>
            <param name="context">Contextual details for the evaluation process.</param>
            <exception cref="T:System.Text.Json.JsonException">
            Thrown when the formed schema contains values that are invalid for the associated
            keywords.
            </exception>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.SimpleDownload(System.Uri)">
            <summary>
            Provides a simple data fetch method that supports `http`, `https`, and `file` URI schemes.
            </summary>
            <param name="uri">The URI to fetch.</param>
            <returns>A JSON string representing the data</returns>
            <exception cref="T:System.FormatException">
            Thrown when the URI scheme is not `http`, `https`, or `file`.
            </exception>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Equals(Json.Schema.Data.DataKeyword)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.GetHashCode">
            <summary>Serves as the default hash function.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Json.Schema.Data.IDataResourceIdentifier">
            <summary>
            Provides an abstraction for different resource identifier types.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.IDataResourceIdentifier.TryResolve(Json.Schema.EvaluationContext,System.Text.Json.Nodes.JsonNode@)">
            <summary>
            Attempts to resolve the reference.
            </summary>
            <param name="context">The schema evaluation context.</param>
            <param name="value">If return is true, the value at the indicated location.</param>
            <returns>true if resolution is successful; false otherwise.</returns>
        </member>
        <member name="T:Json.Schema.Data.JsonPointerIdentifier">
            <summary>
            Handles data references that are JSON Pointers.
            </summary>
        </member>
        <member name="P:Json.Schema.Data.JsonPointerIdentifier.Target">
            <summary>
            The JSON Pointer target.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.JsonPointerIdentifier.#ctor(Json.Pointer.JsonPointer)">
            <summary>
            Creates a new instance of <see cref="T:Json.Schema.Data.JsonPointerIdentifier"/>.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Json.Schema.Data.JsonPointerIdentifier.TryResolve(Json.Schema.EvaluationContext,System.Text.Json.Nodes.JsonNode@)">
            <summary>
            Attempts to resolve the reference.
            </summary>
            <param name="context">The schema evaluation context.</param>
            <param name="value">If return is true, the value at the indicated location.</param>
            <returns>true if resolution is successful; false otherwise.</returns>
        </member>
        <member name="M:Json.Schema.Data.JsonPointerIdentifier.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Json.Schema.Data.JsonSchemaBuilderExtensions">
            <summary>
            Provides a fluent interface for <see cref="T:Json.Schema.JsonSchemaBuilder"/>.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Json.Schema.Data.MetaSchemas">
            <summary>
            Defines a meta-schema for the 
            </summary>
        </member>
        <member name="F:Json.Schema.Data.MetaSchemas.DataId">
            <summary>
            The data vocabulary meta-schema ID.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.MetaSchemas.Data">
            <summary>
            The data vocabulary meta-schema.
            </summary>
        </member>
        <member name="T:Json.Schema.Data.RelativeJsonPointerIdentifier">
            <summary>
            Handles data references that are Relative JSON Pointers.
            </summary>
        </member>
        <member name="P:Json.Schema.Data.RelativeJsonPointerIdentifier.Target">
            <summary>
            The Relative JSON Pointer target.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.RelativeJsonPointerIdentifier.#ctor(Json.Pointer.RelativeJsonPointer)">
            <summary>
            Creates a new instance of <see cref="T:Json.Schema.Data.RelativeJsonPointerIdentifier"/>.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Json.Schema.Data.RelativeJsonPointerIdentifier.TryResolve(Json.Schema.EvaluationContext,System.Text.Json.Nodes.JsonNode@)">
            <summary>
            Attempts to resolve the reference.
            </summary>
            <param name="context">The schema evaluation context.</param>
            <param name="value">If return is true, the value at the indicated location.</param>
            <returns>true if resolution is successful; false otherwise.</returns>
        </member>
        <member name="M:Json.Schema.Data.RelativeJsonPointerIdentifier.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Json.Schema.Data.UriIdentifier">
            <summary>
            Handles data references that are URIs.
            </summary>
        </member>
        <member name="P:Json.Schema.Data.UriIdentifier.Target">
            <summary>
            The URI target.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.UriIdentifier.#ctor(System.Uri)">
            <summary>
            Creates a new instance of <see cref="T:Json.Schema.Data.UriIdentifier"/>.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Json.Schema.Data.UriIdentifier.TryResolve(Json.Schema.EvaluationContext,System.Text.Json.Nodes.JsonNode@)">
            <summary>
            Attempts to resolve the reference.
            </summary>
            <param name="context">The schema evaluation context.</param>
            <param name="value">If return is true, the value at the indicated location.</param>
            <returns>true if resolution is successful; false otherwise.</returns>
        </member>
        <member name="M:Json.Schema.Data.UriIdentifier.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Json.Schema.Data.Vocabularies">
            <summary>
            Declares the vocabularies of the supported drafts.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.Vocabularies.DataId">
            <summary>
            The data vocabulary ID.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.Vocabularies.Data">
            <summary>
            The data vocabulary.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.Vocabularies.Register(Json.Schema.VocabularyRegistry,Json.Schema.SchemaRegistry)">
            <summary>
            Registers the all components required to use the data vocabulary.
            </summary>
        </member>
        <member name="T:Json.Schema.RefResolutionException">
            <summary>
            Thrown when a reference cannot be resolved.
            </summary>
            <remarks>
            This class will be moved into a future version of JsonSchema.Net.
            </remarks>
        </member>
        <member name="P:Json.Schema.RefResolutionException.References">
            <summary>
            The URI that could not be resolved.
            </summary>
        </member>
        <member name="M:Json.Schema.RefResolutionException.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Exception)">
            <summary>
            Thrown when a reference cannot be resolved.
            </summary>
            <param name="references">The references that could not be resolved.</param>
            <param name="innerException">The exception that caused this error.</param>
        </member>
    </members>
</doc>
